package sort;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Calendar;

public class BubbleSort {
	
	
	public static void sort(Comparable[] items) {
		Comparable temp;
		boolean isSorted=true;
		for (int i = 0; i < items.length - 1; i++) {
			
			for (int j = 0; j < items.length - 1 - i; j++) {
				if (items[j].compareTo(items[j + 1]) > 0) {
					temp = items[j + 1];
					items[j + 1] = items[j];
					items[j] = temp;
					isSorted=false;
				}
			}
			if(isSorted) break;
		}
	}
	
	public static void main(String[] args) {
		long start,finish,timeTaken;
		System.out.println("sorting...");
		 Comparable[] x = readData("test3.dat");
		 start = Calendar.getInstance().getTimeInMillis();
		 sort(x);
		 finish = Calendar.getInstance().getTimeInMillis();
		 timeTaken = finish - start;
		System.out.println(timeTaken);
		 start = Calendar.getInstance().getTimeInMillis();
		 sort(x);
		 finish = Calendar.getInstance().getTimeInMillis();
		 timeTaken = finish - start;
		System.out.println(timeTaken);
		
		
		
	}
	
	public static Comparable[] readData(String fileName) {
		Comparable[] items;
		File file = new File(fileName);
		BufferedReader reader = null;
		try {
			reader = new BufferedReader(new FileReader(file));
		} catch (FileNotFoundException e) {
			System.out.println("File not found " + fileName);
			System.exit(0);
		}
		boolean eof = false;
		String inLine = null;
		int numLines = 0;
		while (!eof) {
			try {
				inLine = reader.readLine();
				if (inLine == null) {
					eof = true;
				} else {
					numLines++;
				}
			} catch (IOException e) {
			}
		}
		try {
			reader.close();
		} catch (IOException e) {
		}

		items = new Comparable[numLines];

		try {
			reader = new BufferedReader(new FileReader(file));
		} catch (FileNotFoundException e) {
			System.out.println("File not found " + fileName);
			System.exit(0);
		}
		eof = false;
		inLine = null;
		numLines = 0;
		while (!eof) {
			try {
				inLine = reader.readLine();
				if (inLine == null) {
					eof = true;
				} else {
					items[numLines] = inLine;
					numLines++;
				}
			} catch (IOException e) {
			}
		}
		try {
			reader.close();
		} catch (IOException e) {
		}

		return items;
	}
	
}
